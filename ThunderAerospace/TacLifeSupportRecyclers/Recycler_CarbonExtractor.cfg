PART
{
	MODEL
	{
		model = ThunderAerospace/TacLifeSupportRecyclers/TacContainer
		position = 0.0, 0.0, 0.0
		scale = 1.0, 1.0, 1.0
		rotation = 0.0, 0.0, 0.0
		texture = Texture, ThunderAerospace/TacLifeSupportRecyclers/CarbonExtractorTexture
	}

	// --- general parameters ---
	name = TacCarbonExtractor
	module = Part
	author = TaranisElsu

	// --- asset parameters ---
	scale = 1
	rescaleFactor = 1

	// --- node Definitions ---
	node_stack_top = 0.0, 0.125, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -0.125, 0.0, 0.0, -1.0, 0.0, 1

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- editor parameters ---
	TechRequired = electronics
	entryCost = 6000
	cost = 1000
	category = Utility
	subcategory = 0
	title = TACLS Carbon Extractor
	manufacturer = Thunder Aerospace Corporation
	description = A life support recycling module that extracts carbon from carbon dioxide, leaving pure breathable oxygen.

	// --- standard part parameters ---
	mass = 0.1
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 12
	breakingForce = 500
	breakingTorque = 500
	maxTemp = 3200

	// --- resource parameters ---
	MODULE
	{
		name = TacGenericConverter
		converterName = Carbon Extractor

		// Number of units to convert per day (24 hours)
		conversionRate = 8

		// A comma separated list of resources to use as inputs.
		// For each resource, list the resource name and the amount (which
		// is multiplied by the conversionRate)
		inputResources = CarbonDioxide, 1, ElectricCharge, 1000

		// A comma separated list of resources to output. Same as above
		// but also specify whether it should keep converting if the
		// resource is full (generating excess that will be thrown away).
		outputResources = Oxygen, 0.9, false, Waste, 2.218, true
	}
}
