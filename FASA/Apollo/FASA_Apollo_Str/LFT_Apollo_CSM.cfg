PART
{
// --- general parameters ---
name = FASALFTApolloCSM
module = Part
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Apollo/FASA_Apollo_Str/LFT_Apollo_CSM
}
rescaleFactor = 1.0
scale = 1.0

// --- node definitions ---
node_stack_top = 0.0, 1.45, 0.0, 0.0, 1.0, 0.0
node_stack_bottom = 0.0, -1.45, 0.0, 0.0, 1.0, 0.0
node_stack_bottom1 = 0.0, -1.45, 0.0, 0.0, 1.0, 0.0
node_attach = 0.0, 0.0, 1.26, 0.0, 0.0, -1.0, 1

// --- editor parameters ---
TechRequired = veryHeavyRocketry
entryCost = 34200
cost = 1850
category = Propulsion
subcategory = 0
title = Apollo CSM Fuel Pack
manufacturer = FASA
description = Temporary CSM for Apollo. Makes a great CSM section, Fuel Cell included!

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,1,1,0

// --- standard part parameters ---
mass = 0.25
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 16
breakingForce = 160
breakingTorque = 160
maxTemp = 3600


//Fix for exploding VAB Icons

stageOffset = 0
childStageOffset = 0



MODULE
{
	name = ModuleRCS
	thrusterTransformName = RCSthruster
	thrusterPower = 0.0
	resourceName = MonoPropellant
	fxOffset = 0, 0.25, 0.0
	atmosphereCurve
 	{
   	 key = 0 300
  	 key = 1 280
 	}
}





RESOURCE
{
 name = LiquidFuel
 amount = 315
 maxAmount = 315
}

RESOURCE
{
 name = Oxidizer
 amount = 385
 maxAmount = 385
}

RESOURCE
{
	name = ElectricCharge
	amount = 100
	maxAmount = 100
}

RESOURCE
{
 name = MonoPropellant
 amount = 50
 maxAmount = 50
}

MODULE
{
	name = ModuleGenerator
	isAlwaysActive = false
	requiresAllinputs = true
	resourceThreshold = 0.01
	activateGUIName = Fuel Cell On
	shutdownGUIName = Fuel Cell Off
	efficiency = 95
		INPUT_RESOURCE
		{
		   name = MonoPropellant
		   rate = 0.005
		}	
		OUTPUT_RESOURCE
		{
		   name = ElectricCharge
		   rate = 0.1
		}
}
//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = all

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 95

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }

}