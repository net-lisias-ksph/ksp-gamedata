PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


// --- general parameters ---
name = WingGemini
module = Winglet
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Gemini2/FASA_WingGemini/WingGemini
}

rescaleFactor = 1.0
scale = 1.0

// --- editor parameters ---
TechRequired = experimentalAerodynamics
entryCost = 38200
cost = 5000
category = Aero
subcategory = 0
title = Gemini Wings
manufacturer = FASA
description = The Winged Gemini experiment was designed so that Gemini could land on a runway. It would have greatly reduced the cost of recovery, but it was so unstable and hard to control in tests that it was abandoned.  See if you can do better! Make sure you come in nose first, if you start to spin turn off SAS and you will eventually recover, maybe.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0


mass = 0.25
dragModelType = override
maximum_drag = 0.02
minimum_drag = 0.02
angularDrag = .195
crashTolerance = 25
breakingForce = 25
breakingTorque = 25
maxTemp = 2000
explosionPotential = 0.01

mirrorRefAxis = 0, 0, 0
CoMOffset = 0.0, 0.0, 0.0

// --- winglet parameters ---
// dragCoeff will override the maximum_drag value
dragCoeff = 0.1
deflectionLiftCoeff = 1.5

	MODULE
	{ // this one is custom, and is a little thicker than most heat shields.
		name = ModuleHeatShield
		direction = 0, 0, 1 // bottom of pod
		reflective = 0.05 // 5% of heat is ignored at correct angle
		ablative = AblativeShielding
		loss
		{ // loss is based on the shockwave temperature (also based on density)
			key = 650 0 0 0 // start ablating at 650 degrees C
			key = 1000 64 0 0 // peak ablation at 1000 degrees C
			key = 3000 80 0 0 // max ablation at 3000 degrees C
		}
		dissipation
		{ // dissipation is based on the part's current temperature
				key = 300 0 0 0 // begin ablating at 300 degrees C
				key = 500 180 0 0 // maximum dissipation at 500 degrees C
		}
	}
	RESOURCE
	{
		name = AblativeShielding
		amount = 350
		maxAmount = 350
	}
}

}
