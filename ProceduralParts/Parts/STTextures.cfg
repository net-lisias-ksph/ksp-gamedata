STRETCHYTANKTEXTURES
{
	name = Default
	
	// DOCS
	// If you're adding a new texture, create a new node.
	// The name of the node is the name that will be stored in your craft file.
	// Inside that node, you need two subnodes: sides and ends
	// sides can have the following keys:
		// texture = the path to the texture used for the sides
		// bump = the bump map, if any (shader will be non-bumped if this is left out)
		// uScale = how many times the texture is tiled horizontally around the tank
		// vScale = how many times the texture is tiled vertically on the tank sides
		// autoScale = if present and true, the uScale and vScale will be multiplied by
			// tank radial and vertical stretch factors respectively. Note that the
			// scales will round to the nearest (total scale factor / original scale)
			// so that textures don't have seams. The default sides texture
			// has uScale 4, so it starts tiled 4x horizontally and when stretched will
			// be more or less (but always in steps of 0.25)
		// autoWidthDivide = if present and true, and autoScale is true, divide height
			// scaling by width stretch factor. In other words, a 2x10m SRB and 1x5m SRB
			// will have the same texture scaling. (SegmentedSRB uses this)
		// autoHeightSteps = if present, use steps of (this) instead of (1/vScale) for
			// vertical tiling of the texture (only use when autoScale is true)
	// ends can have just the texture key (see above)
			
	Original
	{
		//by Ancient Gammoner
		sides
		{
			texture = ProceduralParts/Parts/sides
			uScale = 4
			vScale = 1
			autoScale = true
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	Tiles
	{
		//by Swamp Ig
		sides
		{
			texture = ProceduralParts/Parts/tiles
			bump = ProceduralParts/Parts/tiles_NRM
			uScale = 6
			vScale = 1.5
			autoScale = true
			autoHeightSteps = 0.5
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	Stockalike
	{
		//by Ancient Gammoner
		sides
		{
			texture = ProceduralParts/Parts/stocksides
			bump = ProceduralParts/Parts/stocksides_NRM
			uScale = 2
			vScale = 1
		}
		ends
		{
			texture = ProceduralParts/Parts/stockend
		}
	}
	German
	{
		// by NathanKell
		sides
		{
			texture = ProceduralParts/Parts/gersides
			uScale = 2
			vScale = 1
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	Saturn
	{
		// by NathanKell
		sides
		{
			texture = ProceduralParts/Parts/ussides
			bump = ProceduralParts/Parts/stocksides_NRM
			uScale = 2
			vScale = 1
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	SegmentedSRB
	{
		// by NathanKell
		sides
		{
			texture = ProceduralParts/Parts/srbsides
			uScale = 1
			vScale = 1
			autoScale = true
			autoWidthDivide = true
			autoHeightSteps = 0.5
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	CryogenicOrange
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/orangesides
			uScale = 1.0
			vScale = 0.5
			autoScale = true
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	RedstoneStripes
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/stripes1
			uScale = 2
			vScale = 1
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	TitanStripes
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/stripes2
			uScale = 2
			vScale = 1
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	WhiteSide
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/whiteside
			uScale = 2
			vScale = 1			
			autoScale = true
			autoWidthDivide = true
			autoHeightSteps = 0.5
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	BlueSide
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/blueside
			uScale = 2
			vScale = 2			
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	GreySide
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/greyside
			uScale = 2
			vScale = 1			
			autoScale = true
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	PlainWhite
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/plainwhite
			uScale = 2
			vScale = 1			
			autoScale = true
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	SoyuzGreen
	{
		// by Chestburster
		sides
		{
			texture = ProceduralParts/Parts/soyuzgreen
			uScale = 2
			vScale = 1			
			autoScale = true
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	Atlas
	{
		// by Dante80
		sides
		{
			texture = ProceduralParts/Parts/atlas
			uScale = 1.0
			vScale = 0.5
			autoScale = true
			autoWidthDivide = true
			autoHeightSteps = 0.5
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	Copernicus
	{
		// by Dante80
		sides
		{
			texture = ProceduralParts/Parts/copernicus
			uScale = 1.0
			vScale = 0.5
			autoScale = true
			autoWidthDivide = true
			autoHeightSteps = 0.5
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	Mu
	{
		// by Dante80
		sides
		{
			texture = ProceduralParts/Parts/mu
			uScale = 2.0
			vScale = 1.0
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
	GoldFoil
	{
		// by NathanKell
		sides
		{
			texture = ProceduralParts/Parts/foilthin
			bump = ProceduralParts/Parts/foilthin_NRM
			uScale = 2.0
			vScale = 1.0
			autoScale = true
			autoWidthDivide = true
			autoHeightSteps = 1.0
		}
		ends
		{
			texture = ProceduralParts/Parts/ends
		}
	}
}