// Patches to the awesome Realistic Progression Lite mod.
//
// By Paul '@pjf' Fenwick
//
// This file may be used under your choice of the following licenses
//  - Creative Commons Attribution (CC-BY) 4.0
//  - GNU Public License 2
//  - MIT License
//
// If you like my work, you can support me at https://gittip.com/pjf

// This file adjusts science to make it work the way I think it should. :)

// Firstly, things which are just taking electronic measurements should
// be fully transmissable. Recovering a geiger counter doesn't somehow
// make the data more valuable. It's exactly the same.

// We also make the data fully transmisable on the first go. I find
// having to repeat the same experiment multiple times to be really dull.

// FASA Parts

@PART[FASAProbeGeigerCounter]
{
    @MODULE[ModuleScienceExperiment]
    {
        %xmitDataScalar = 1.0
    }
}

@EXPERIMENT_DEFINITION[*]:HAS[#id[GeigerCounter]]
{
    @baseValue = 10
}

// KSPI (WarpPlugin) parts

@PART[DTMagnetometer]
{
    @MODULE[ModuleScienceExperiment]
    {
        %xmitDataScalar = 1.0
    }
}

@EXPERIMENT_DEFINITION[*]:HAS[#id[magnetosphericExperiment]]
{
    @baseValue = 22
}

@PART[FNGCMS]
{
    @MODULE[ModuleScienceExperiment]
    {
        %xmitDataScalar = 1.0
    }
}

@EXPERIMENT_DEFINITION[*]:HAS[#id[gasChromotographyMassSpectrometryExperiment]]
{
    @baseValue = 22
}


// Materials science modules (which consists of most things which are not
// "repeatable") need to be returned for full science value. This includes
// mystery goo, and Science Jr experiments.

// I don't want Finals here, I'd rather use AFTER, but RPL_Tweak_Pack
// uses Final, so we need to run just as finally too. :)

@PART[science_module]:Final
{
    @MODULE[ModuleScienceExperiment]
    {
        %xmitDataScalar = 0.0
    }
}

@PART[GooExperiment]:Final
{
    @MODULE[ModuleScienceExperiment]
    {
        %xmitDataScalar = 0.0
    }
}

// Mini-Goo
@PART[FASAGeminiSciRadmeter]:Final
{
    @MODULE[ModuleScienceExperiment]
    {
        %xmitDataScalar = 0.0
    }
}
